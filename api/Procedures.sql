DROP PROCEDURE GETUSERBYLOGIN;
DROP PROCEDURE GETUSERORDERPRODUCTSIDS;
DROP PROCEDURE GETUSERROLESIDS;
DROP PROCEDURE GETUSERORDERSIDS;
DROP PROCEDURE CREATEUSER;
DROP PROCEDURE DROPUSER;
DROP PROCEDURE GRANTADMINTOUSER;
DROP PROCEDURE GETLASTORDERID;
DROP PROCEDURE CREATEORDER;
DROP PROCEDURE ADDPRODUCTTOORDER;
DROP PROCEDURE GETVENDORS;
DROP PROCEDURE GETVENDORSBYPAGENUMBER;
DROP PROCEDURE GETVENDORBYNAME;
DROP PROCEDURE GETVENDORBYID;
DROP PROCEDURE GETVENDORSCOUNT;
DROP PROCEDURE ADDVENDOR;
DROP PROCEDURE DELETEVENDOR;
DROP PROCEDURE EDITVENDOR;
DROP PROCEDURE GETPRODUCTS;
DROP PROCEDURE GETPRODUCTSCOUNT;
DROP PROCEDURE GETPRODUCTSBYTITLECOUNT;
DROP PROCEDURE GETPRODUCTSBYPAGENUMBER;
DROP PROCEDURE GETPRODUCTBYID;
DROP PROCEDURE DELETEPRODUCT;
DROP PROCEDURE ADDPRODUCT;
DROP PROCEDURE UPDATEPRODUCTINFO;


------------------------------------------------------------------------------------------
-- USERS
------------------------------------------------------------------------------------------

GO
CREATE PROCEDURE GETUSERBYLOGIN @LOGIN VARCHAR(255) AS
	SELECT * FROM USERS WHERE LOGIN = @LOGIN;
GO

GO
CREATE PROCEDURE GETUSERORDERPRODUCTSIDS @ORDER_ID INT, @USER_ID INT AS
	SELECT G.ID AS ID
		FROM USER_ORDER UO
			INNER JOIN ORDER_PRODUCTS OG ON UO.ID = OG.ORDER_ID
			INNER JOIN PRODUCTS G ON G.ID = OG.PRODUCT_ID
		WHERE UO.USER_ID = @USER_ID AND UO.ID = @ORDER_ID;
GO

GO
CREATE PROCEDURE GETUSERROLESIDS @ID INT AS
	SELECT ROLE_ID FROM USERS U
		INNER JOIN USERS_ROLES UR ON U.ID = UR.USER_ID
		INNER JOIN ROLES R ON R.ID = UR.ROLE_ID
		WHERE U.ID = @ID;
GO

GO
CREATE PROCEDURE GETUSERORDERSIDS @ID INT AS
	SELECT ID FROM USER_ORDER WHERE USER_ID = @ID;
GO

GO
CREATE PROCEDURE CREATEUSER @LOGIN VARCHAR(255), @PASSWORD VARCHAR(255), @SALT VARBINARY(255), @NAME VARCHAR(255) AS
	INSERT INTO USERS (LOGIN, NAME, PASSWORD, SALT) VALUES (@LOGIN, @NAME, @PASSWORD, @SALT);
	DECLARE @USER_ID INT;
	DECLARE @ROLE_ID INT;
	SET @USER_ID = (SELECT ID FROM USERS WHERE LOGIN = @LOGIN);
	SET @ROLE_ID = (SELECT ID FROM ROLES WHERE NAME = 'USER');
	INSERT INTO USERS_ROLES (USER_ID, ROLE_ID) VALUES (@USER_ID, @ROLE_ID);
GO

GO
CREATE PROCEDURE DROPUSER @ID INT AS
	DELETE FROM USERS_ROLES WHERE USER_ID = @ID;
	DECLARE @ORDER_ID INT;
	SET @ORDER_ID = (SELECT ID FROM USER_ORDER WHERE USER_ID = @ID);
	DELETE FROM ORDER_PRODUCTS WHERE ORDER_ID = @ORDER_ID;
	DELETE FROM USER_ORDER WHERE USER_ID = @ID;
	DELETE FROM USERS WHERE ID = @ID;
GO

GO
CREATE PROCEDURE GRANTADMINTOUSER @ID INT AS
	DECLARE @ROLE_ID INT;
	SET @ROLE_ID = (SELECT ID FROM ROLES WHERE NAME = 'ADMIN');
	INSERT INTO USERS_ROLES (USER_ID, ROLE_ID) VALUES (@ID, @ROLE_ID);
GO

DELETE FROM ORDER_PRODUCTS;
DELETE FROM USER_ORDER;

SELECT * FROM USER_ORDER;
SELECT * FROM ORDER_PRODUCTS;

------------------------------------------------------------------------------------------
-- USERS
------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------
-- ORDER
------------------------------------------------------------------------------------------

GO
CREATE PROCEDURE GETLASTORDERID @USER_ID INT AS
	SELECT TOP 1 ID FROM USER_ORDER WHERE USER_ID = @USER_ID ORDER BY ID DESC;
GO

GO
CREATE PROCEDURE CREATEORDER @USER_ID INT, @TOTAL FLOAT AS
	INSERT INTO USER_ORDER (USER_ID, TOTAL_AMOUNT) VALUES (@USER_ID, @TOTAL);
GO

GO
CREATE PROCEDURE ADDPRODUCTTOORDER @ORDER_ID INT, @PRODUCT_ID INT AS
	INSERT INTO ORDER_PRODUCTS (PRODUCT_ID, ORDER_ID) VALUES (@PRODUCT_ID, @ORDER_ID);
GO

------------------------------------------------------------------------------------------
-- ORDER
------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------
-- VENDORS
------------------------------------------------------------------------------------------

GO
CREATE PROCEDURE GETVENDORS AS
	SELECT * FROM VENDORS;
GO

GO
CREATE PROCEDURE GETVENDORSBYPAGENUMBER @PAGE_NUMBER INT, @PAGE_SIZE INT AS
	DECLARE @START_POINT INT = 0;
	DECLARE @END_POINT INT = 0;
	SET @START_POINT = ((@PAGE_NUMBER - 1) * @PAGE_SIZE) + 1;
	SET @END_POINT = @START_POINT + @PAGE_SIZE - 1;
	SELECT *
	FROM (SELECT ROW_NUMBER() OVER(ORDER BY (SELECT NULL AS NOORDER)) AS ROWNUM, *
			FROM VENDORS) AS ALIAS
	WHERE ROWNUM BETWEEN @START_POINT AND @END_POINT;
GO

GO
CREATE PROCEDURE GETVENDORBYNAME @NAME VARCHAR(255) AS
	SELECT * FROM VENDORS WHERE VENDOR_NAME = @NAME;
GO

GO
CREATE PROCEDURE GETVENDORBYID @ID INT AS
	SELECT * FROM VENDORS WHERE ID = @ID;
GO

GO
CREATE PROCEDURE GETVENDORSCOUNT AS
	SELECT COUNT(*) FROM VENDORS;
GO

GO
CREATE PROCEDURE ADDVENDOR @NAME VARCHAR(255) AS
	INSERT INTO VENDORS (VENDOR_NAME) VALUES (@NAME);
GO

GO
CREATE PROCEDURE DELETEVENDOR @ID INT AS
	DELETE FROM VENDORS WHERE ID = @ID;
GO

GO
CREATE PROCEDURE EDITVENDOR @ID INT, @NAME VARCHAR(255) AS
	UPDATE VENDORS SET VENDOR_NAME = @NAME WHERE ID = @ID;
GO

------------------------------------------------------------------------------------------
-- VENDORS
------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------
-- PRODUCTS
------------------------------------------------------------------------------------------

GO
CREATE PROCEDURE GETPRODUCTS AS
	SELECT * FROM PRODUCTS;
GO

GO
CREATE PROCEDURE GETPRODUCTSCOUNT AS
	SELECT COUNT(*) FROM PRODUCTS;
GO

GO
CREATE PROCEDURE GETPRODUCTSBYTITLECOUNT @TITLE VARCHAR(255) AS
	SELECT COUNT(*) FROM PRODUCTS WHERE TITLE LIKE '%' + @TITLE + '%';
GO

GO
CREATE PROCEDURE GETPRODUCTBYID @ID INT AS
	SELECT * FROM PRODUCTS WHERE ID = @ID;
GO

GO
CREATE PROCEDURE GETPRODUCTSBYPAGENUMBER @PAGE_NUMBER INT, @PAGE_SIZE INT, @TITLE VARCHAR(255) = NULL AS
	DECLARE @START_POINT INT = 0;
	DECLARE @END_POINT INT = 0;
	SET @START_POINT = ((@PAGE_NUMBER - 1) * @PAGE_SIZE) + 1;
	SET @END_POINT = @START_POINT + @PAGE_SIZE - 1;
	IF (@TITLE IS NULL)
		SELECT *
		FROM (SELECT ROW_NUMBER() OVER(ORDER BY (SELECT NULL AS NOORDER)) AS ROWNUM, *
			  FROM PRODUCTS) AS ALIAS
		WHERE ROWNUM BETWEEN @START_POINT AND @END_POINT;
	ELSE
		SELECT *
		FROM (SELECT ROW_NUMBER() OVER(ORDER BY (SELECT NULL AS NOORDER)) AS ROWNUM, *
			  FROM PRODUCTS) AS ALIAS
		WHERE ROWNUM BETWEEN @START_POINT AND @END_POINT AND TITLE LIKE '%' + @TITLE + '%';
GO

GO
CREATE PROCEDURE DELETEPRODUCT @PRODUCTID INT AS
BEGIN
	DELETE FROM ORDER_PRODUCTS WHERE PRODUCT_ID = @PRODUCTID;
	DELETE FROM PRODUCTS WHERE ID = @PRODUCTID;
END;
GO

GO
CREATE PROCEDURE ADDPRODUCT @VENDOR_ID INT, @TITLE VARCHAR(255), @RATING VARCHAR(3), @PRICE FLOAT, @PRODUCT_DESCRIPTION VARCHAR(4000) AS
BEGIN
	INSERT INTO PRODUCTS (VENDOR_ID, TITLE, RATING, PRICE, PRODUCT_DESCRIPTION) VALUES (@VENDOR_ID, @TITLE, @RATING, @PRICE, @PRODUCT_DESCRIPTION);
END;
GO

GO
CREATE PROCEDURE UPDATEPRODUCTINFO @ID INT, @VENDOR_ID INT, @TITLE VARCHAR(255), @RATING VARCHAR(3), @PRICE FLOAT, @PRODUCT_DESCRIPTION VARCHAR(4000) AS
BEGIN
	UPDATE PRODUCTS SET VENDOR_ID = @VENDOR_ID, TITLE = @TITLE, RATING = @RATING, PRICE = @PRICE, PRODUCT_DESCRIPTION = @PRODUCT_DESCRIPTION WHERE ID = @ID;
END;
GO

------------------------------------------------------------------------------------------
-- PRODUCTS
------------------------------------------------------------------------------------------